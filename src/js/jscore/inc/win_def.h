
#ifndef win_def_h_
#define win_def_h_
//#include <windows.h>


#include "quickjs-libc.h"

//extern HMODULE _jsc_hl;

extern JSRuntime * (*WIN_JS_NewRuntime)();
extern JSContext * (*WIN_JS_NewContext)(JSRuntime *);
extern void (*WIN_JS_SetRuntimeInfo)(JSRuntime *rt, const char *info);
extern void (*WIN_JS_SetMemoryLimit)(JSRuntime *rt, size_t limit);
extern void (*WIN_JS_SetGCThreshold)(JSRuntime *rt, size_t gc_threshold);
extern void (*WIN_JS_SetMaxStackSize)(JSRuntime *rt, size_t stack_size);
extern void (*WIN_JS_UpdateStackTop)(JSRuntime *rt);
extern JSRuntime *(*WIN_JS_NewRuntime2)(const JSMallocFunctions *mf, void *opaque);
extern void (*WIN_JS_FreeRuntime)(JSRuntime *rt);
extern void *(*WIN_JS_GetRuntimeOpaque)(JSRuntime *rt);
extern void (*WIN_JS_SetRuntimeOpaque)(JSRuntime *rt, void *opaque);
extern void (*WIN_JS_MarkValue)(JSRuntime *rt, JSValueConst val, JS_MarkFunc *mark_func);
extern void (*WIN_JS_RunGC)(JSRuntime *rt);
extern JS_BOOL (*WIN_JS_IsLiveObject)(JSRuntime *rt, JSValueConst obj);
extern JSContext *(*WIN_JS_NewContext)(JSRuntime *rt);
extern void (*WIN_JS_FreeContext)(JSContext *s);
extern JSContext *(*WIN_JS_DupContext)(JSContext *ctx);
extern void *(*WIN_JS_GetContextOpaque)(JSContext *ctx);
extern void (*WIN_JS_SetContextOpaque)(JSContext *ctx, void *opaque);
extern JSRuntime *(*WIN_JS_GetRuntime)(JSContext *ctx);
extern void (*WIN_JS_SetClassProto)(JSContext *ctx, JSClassID class_id, JSValue obj);
extern JSValue (*WIN_JS_GetClassProto)(JSContext *ctx, JSClassID class_id);
extern JSContext *(*WIN_JS_NewContextRaw)(JSRuntime *rt);
extern void (*WIN_JS_AddIntrinsicBaseObjects)(JSContext *ctx);
extern void (*WIN_JS_AddIntrinsicDate)(JSContext *ctx);
extern void (*WIN_JS_AddIntrinsicEval)(JSContext *ctx);
extern void (*WIN_JS_AddIntrinsicStringNormalize)(JSContext *ctx);
extern void (*WIN_JS_AddIntrinsicRegExpCompiler)(JSContext *ctx);
extern void (*WIN_JS_AddIntrinsicRegExp)(JSContext *ctx);
extern void (*WIN_JS_AddIntrinsicJSON)(JSContext *ctx);
extern void (*WIN_JS_AddIntrinsicProxy)(JSContext *ctx);
extern void (*WIN_JS_AddIntrinsicMapSet)(JSContext *ctx);
extern void (*WIN_JS_AddIntrinsicTypedArrays)(JSContext *ctx);
extern void (*WIN_JS_AddIntrinsicPromise)(JSContext *ctx);
extern void (*WIN_JS_AddIntrinsicBigInt)(JSContext *ctx);
extern void (*WIN_JS_AddIntrinsicBigFloat)(JSContext *ctx);
extern void (*WIN_JS_AddIntrinsicBigDecimal)(JSContext *ctx);
extern void (*WIN_JS_AddIntrinsicOperators)(JSContext *ctx);
extern void (*WIN_JS_EnableBignumExt)(JSContext *ctx, JS_BOOL enable);
extern JSValue (*WIN_js_string_codePointRange)(JSContext *ctx, JSValueConst this_val, int argc, JSValueConst *argv);
extern void *(*WIN_js_malloc_rt)(JSRuntime *rt, size_t size);
extern void (*WIN_js_free_rt)(JSRuntime *rt, void *ptr);
extern void *(*WIN_js_realloc_rt)(JSRuntime *rt, void *ptr, size_t size);
extern size_t (*WIN_js_malloc_usable_size_rt)(JSRuntime *rt, const void *ptr);
extern void *(*WIN_js_mallocz_rt)(JSRuntime *rt, size_t size);
extern void *(*WIN_js_malloc)(JSContext *ctx, size_t size);
extern void (*WIN_js_free)(JSContext *ctx, void *ptr);
extern void *(*WIN_js_realloc)(JSContext *ctx, void *ptr, size_t size);
extern size_t (*WIN_js_malloc_usable_size)(JSContext *ctx, const void *ptr);
extern void *(*WIN_js_realloc2)(JSContext *ctx, void *ptr, size_t size, size_t *pslack);
extern void *(*WIN_js_mallocz)(JSContext *ctx, size_t size);
extern char *(*WIN_js_strdup)(JSContext *ctx, const char *str);
extern char *(*WIN_js_strndup)(JSContext *ctx, const char *s, size_t n);
extern void (*WIN_JS_ComputeMemoryUsage)(JSRuntime *rt, JSMemoryUsage *s);
extern void (*WIN_JS_DumpMemoryUsage)(FILE *fp, const JSMemoryUsage *s, JSRuntime *rt);
extern JSAtom (*WIN_JS_NewAtomLen)(JSContext *ctx, const char *str, size_t len);
extern JSAtom (*WIN_JS_NewAtom)(JSContext *ctx, const char *str);
extern JSAtom (*WIN_JS_NewAtomUInt32)(JSContext *ctx, uint32_t n);
extern JSAtom (*WIN_JS_DupAtom)(JSContext *ctx, JSAtom v);
extern void (*WIN_JS_FreeAtom)(JSContext *ctx, JSAtom v);
extern void (*WIN_JS_FreeAtomRT)(JSRuntime *rt, JSAtom v);
extern JSValue (*WIN_JS_AtomToValue)(JSContext *ctx, JSAtom atom);
extern JSValue (*WIN_JS_AtomToString)(JSContext *ctx, JSAtom atom);
extern const char *(*WIN_JS_AtomToCString)(JSContext *ctx, JSAtom atom);
extern JSAtom (*WIN_JS_ValueToAtom)(JSContext *ctx, JSValueConst val);
extern JSClassID (*WIN_JS_NewClassID)(JSClassID *pclass_id);
extern int (*WIN_JS_NewClass)(JSRuntime *rt, JSClassID class_id, const JSClassDef *class_def);
extern int (*WIN_JS_IsRegisteredClass)(JSRuntime *rt, JSClassID class_id);
extern JSValue (*WIN_JS_NewBigInt64)(JSContext *ctx, int64_t v);
extern JSValue (*WIN_JS_NewBigUint64)(JSContext *ctx, uint64_t v);
extern JSValue (*WIN_JS_Throw)(JSContext *ctx, JSValue obj);
extern JSValue (*WIN_JS_GetException)(JSContext *ctx);
extern JS_BOOL (*WIN_JS_IsError)(JSContext *ctx, JSValueConst val);
extern void (*WIN_JS_ResetUncatchableError)(JSContext *ctx);
extern JSValue (*WIN_JS_NewError)(JSContext *ctx);
extern JSValue __js_printf_like(2, 3) (*WIN_JS_ThrowSyntaxError)(JSContext *ctx, const char *fmt, ...);
extern JSValue __js_printf_like(2, 3) (*WIN_JS_ThrowTypeError)(JSContext *ctx, const char *fmt, ...);
extern JSValue __js_printf_like(2, 3) (*WIN_JS_ThrowReferenceError)(JSContext *ctx, const char *fmt, ...);
extern JSValue __js_printf_like(2, 3) (*WIN_JS_ThrowRangeError)(JSContext *ctx, const char *fmt, ...);
extern JSValue __js_printf_like(2, 3) (*WIN_JS_ThrowInternalError)(JSContext *ctx, const char *fmt, ...);
extern JSValue (*WIN_JS_ThrowOutOfMemory)(JSContext *ctx);
extern void (*WIN___JS_FreeValue)(JSContext *ctx, JSValue v);
extern void (*WIN___JS_FreeValueRT)(JSRuntime *rt, JSValue v);
extern int (*WIN_JS_ToBool)(JSContext *ctx, JSValueConst val); /* return -1 for JS_EXCEPTION */
extern int (*WIN_JS_ToInt32)(JSContext *ctx, int32_t *pres, JSValueConst val);
extern int (*WIN_JS_ToInt64)(JSContext *ctx, int64_t *pres, JSValueConst val);
extern int (*WIN_JS_ToIndex)(JSContext *ctx, uint64_t *plen, JSValueConst val);
extern int (*WIN_JS_ToFloat64)(JSContext *ctx, double *pres, JSValueConst val);
extern int (*WIN_JS_ToBigInt64)(JSContext *ctx, int64_t *pres, JSValueConst val);
extern int (*WIN_JS_ToInt64Ext)(JSContext *ctx, int64_t *pres, JSValueConst val);
extern JSValue (*WIN_JS_NewStringLen)(JSContext *ctx, const char *str1, size_t len1);
extern JSValue (*WIN_JS_NewString)(JSContext *ctx, const char *str);
extern JSValue (*WIN_JS_NewAtomString)(JSContext *ctx, const char *str);
extern JSValue (*WIN_JS_ToString)(JSContext *ctx, JSValueConst val);
extern JSValue (*WIN_JS_ToPropertyKey)(JSContext *ctx, JSValueConst val);
extern const char *(*WIN_JS_ToCStringLen2)(JSContext *ctx, size_t *plen, JSValueConst val1, JS_BOOL cesu8);
extern void (*WIN_JS_FreeCString)(JSContext *ctx, const char *ptr);
extern JSValue (*WIN_JS_NewObjectProtoClass)(JSContext *ctx, JSValueConst proto, JSClassID class_id);
extern JSValue (*WIN_JS_NewObjectClass)(JSContext *ctx, int class_id);
extern JSValue (*WIN_JS_NewObjectProto)(JSContext *ctx, JSValueConst proto);
extern JSValue (*WIN_JS_NewObject)(JSContext *ctx);
extern JS_BOOL (*WIN_JS_IsFunction)(JSContext* ctx, JSValueConst val);
extern JS_BOOL (*WIN_JS_IsConstructor)(JSContext* ctx, JSValueConst val);
extern JS_BOOL (*WIN_JS_SetConstructorBit)(JSContext *ctx, JSValueConst func_obj, JS_BOOL val);
extern JSValue (*WIN_JS_NewArray)(JSContext *ctx);
extern int (*WIN_JS_IsArray)(JSContext *ctx, JSValueConst val);
extern JSValue (*WIN_JS_GetPropertyInternal)(JSContext *ctx, JSValueConst obj,JSAtom prop, JSValueConst receiver,JS_BOOL throw_ref_error);
extern JSValue (*WIN_JS_GetPropertyStr)(JSContext *ctx, JSValueConst this_obj,const char *prop);
extern JSValue (*WIN_JS_GetPropertyUint32)(JSContext *ctx, JSValueConst this_obj,uint32_t idx);
extern int (*WIN_JS_SetPropertyInternal)(JSContext *ctx, JSValueConst this_obj,JSAtom prop, JSValue val,int flags);
extern int (*WIN_JS_SetPropertyUint32)(JSContext *ctx, JSValueConst this_obj,uint32_t idx, JSValue val);
extern int (*WIN_JS_SetPropertyInt64)(JSContext *ctx, JSValueConst this_obj,int64_t idx, JSValue val);
extern int (*WIN_JS_SetPropertyStr)(JSContext *ctx, JSValueConst this_obj, const char *prop, JSValue val);
extern int (*WIN_JS_HasProperty)(JSContext *ctx, JSValueConst this_obj, JSAtom prop);
extern int (*WIN_JS_IsExtensible)(JSContext *ctx, JSValueConst obj);
extern int (*WIN_JS_PreventExtensions)(JSContext *ctx, JSValueConst obj);
extern int (*WIN_JS_DeleteProperty)(JSContext *ctx, JSValueConst obj, JSAtom prop, int flags);
extern int (*WIN_JS_SetPrototype)(JSContext *ctx, JSValueConst obj, JSValueConst proto_val);
extern JSValue (*WIN_JS_GetPrototype)(JSContext *ctx, JSValueConst val);
extern int (*WIN_JS_GetOwnPropertyNames)(JSContext *ctx, JSPropertyEnum **ptab, uint32_t *plen, JSValueConst obj, int flags);
extern int (*WIN_JS_GetOwnProperty)(JSContext *ctx, JSPropertyDescriptor *desc, JSValueConst obj, JSAtom prop);
extern JSValue (*WIN_JS_Call)(JSContext *ctx, JSValueConst func_obj, JSValueConst this_obj, int argc, JSValueConst *argv);
extern JSValue (*WIN_JS_Invoke)(JSContext *ctx, JSValueConst this_val, JSAtom atom, int argc, JSValueConst *argv);
extern JSValue (*WIN_JS_CallConstructor)(JSContext *ctx, JSValueConst func_obj, int argc, JSValueConst *argv);
extern JSValue (*WIN_JS_CallConstructor2)(JSContext *ctx, JSValueConst func_obj,JSValueConst new_target, int argc, JSValueConst *argv);
extern JS_BOOL (*WIN_JS_DetectModule)(const char *input, size_t input_len);
extern JSValue (*WIN_JS_Eval)(JSContext *ctx, const char *input, size_t input_len,const char *filename, int eval_flags);
extern JSValue (*WIN_JS_EvalThis)(JSContext *ctx, JSValueConst this_obj, const char *input, size_t input_len, const char *filename, int eval_flags);
extern JSValue (*WIN_JS_GetGlobalObject)(JSContext *ctx);
extern int (*WIN_JS_IsInstanceOf)(JSContext *ctx, JSValueConst val, JSValueConst obj);
extern int (*WIN_JS_DefineProperty)(JSContext *ctx, JSValueConst this_obj, JSAtom prop, JSValueConst val, JSValueConst getter, JSValueConst setter, int flags);
extern int (*WIN_JS_DefinePropertyValue)(JSContext *ctx, JSValueConst this_obj,JSAtom prop, JSValue val, int flags);
extern int (*WIN_JS_DefinePropertyValueUint32)(JSContext *ctx, JSValueConst this_obj,uint32_t idx, JSValue val, int flags);
extern int (*WIN_JS_DefinePropertyValueStr)(JSContext *ctx, JSValueConst this_obj,  const char *prop, JSValue val, int flags);
extern int (*WIN_JS_DefinePropertyGetSet)(JSContext *ctx, JSValueConst this_obj, JSAtom prop, JSValue getter, JSValue setter,int flags);
extern void (*WIN_JS_SetOpaque)(JSValue obj, void *opaque);
extern void *(*WIN_JS_GetOpaque)(JSValueConst obj, JSClassID class_id);
extern void *(*WIN_JS_GetOpaque2)(JSContext *ctx, JSValueConst obj, JSClassID class_id);
extern JSValue (*WIN_JS_ParseJSON)(JSContext *ctx, const char *buf, size_t buf_len, const char *filename);
extern JSValue (*WIN_JS_ParseJSON2)(JSContext *ctx, const char *buf, size_t buf_len, const char *filename, int flags);
extern JSValue (*WIN_JS_JSONStringify)(JSContext *ctx, JSValueConst obj, JSValueConst replacer, JSValueConst space0);
extern JSValue (*WIN_JS_NewArrayBuffer)(JSContext *ctx, uint8_t *buf, size_t len, JSFreeArrayBufferDataFunc *free_func, void *opaque, JS_BOOL is_shared);
extern JSValue (*WIN_JS_NewArrayBufferCopy)(JSContext *ctx, const uint8_t *buf, size_t len);
extern void (*WIN_JS_DetachArrayBuffer)(JSContext *ctx, JSValueConst obj);
extern uint8_t *(*WIN_JS_GetArrayBuffer)(JSContext *ctx, size_t *psize, JSValueConst obj);
extern JSValue (*WIN_JS_GetTypedArrayBuffer)(JSContext *ctx, JSValueConst obj, size_t *pbyte_offset, size_t *pbyte_length, size_t *pbytes_per_element);
extern void (*WIN_JS_SetSharedArrayBufferFunctions)(JSRuntime *rt, const JSSharedArrayBufferFunctions *sf);
extern JSValue (*WIN_JS_NewPromiseCapability)(JSContext *ctx, JSValue *resolving_funcs);
extern void (*WIN_JS_SetHostPromiseRejectionTracker)(JSRuntime *rt, JSHostPromiseRejectionTracker *cb, void *opaque);
extern void (*WIN_JS_SetInterruptHandler)(JSRuntime *rt, JSInterruptHandler *cb, void *opaque);
extern void (*WIN_JS_SetCanBlock)(JSRuntime *rt, JS_BOOL can_block);
extern void (*WIN_JS_SetIsHTMLDDA)(JSContext *ctx, JSValueConst obj);
extern void (*WIN_JS_SetModuleLoaderFunc)(JSRuntime *rt, JSModuleNormalizeFunc *module_normalize, JSModuleLoaderFunc *module_loader, void *opaque);
extern JSValue (*WIN_JS_GetImportMeta)(JSContext *ctx, JSModuleDef *m);
extern JSAtom (*WIN_JS_GetModuleName)(JSContext *ctx, JSModuleDef *m);
extern int (*WIN_JS_EnqueueJob)(JSContext *ctx, JSJobFunc *job_func, int argc, JSValueConst *argv);
extern JS_BOOL (*WIN_JS_IsJobPending)(JSRuntime *rt);
extern int (*WIN_JS_ExecutePendingJob)(JSRuntime *rt, JSContext **pctx);
extern uint8_t *(*WIN_JS_WriteObject)(JSContext *ctx, size_t *psize, JSValueConst obj, int flags);
extern uint8_t *(*WIN_JS_WriteObject2)(JSContext *ctx, size_t *psize, JSValueConst obj, int flags, uint8_t ***psab_tab, size_t *psab_tab_len);
extern JSValue (*WIN_JS_ReadObject)(JSContext *ctx, const uint8_t *buf, size_t buf_len, int flags);
extern JSValue (*WIN_JS_EvalFunction)(JSContext *ctx, JSValue fun_obj);
extern int (*WIN_JS_ResolveModule)(JSContext *ctx, JSValueConst obj);
extern JSAtom (*WIN_JS_GetScriptOrModuleName)(JSContext *ctx, int n_stack_levels);
extern JSModuleDef *(*WIN_JS_RunModule)(JSContext *ctx, const char *basename, const char *filename);
extern JSValue (*WIN_JS_NewCFunction2)(JSContext *ctx, JSCFunction *func, const char *name,int length, JSCFunctionEnum cproto, int magic);
extern JSValue (*WIN_JS_NewCFunctionData)(JSContext *ctx, JSCFunctionData *func, int length, int magic, int data_len,JSValueConst *data);
extern void (*WIN_JS_SetConstructor)(JSContext *ctx, JSValueConst func_obj, JSValueConst proto);
extern void (*WIN_JS_SetPropertyFunctionList)(JSContext *ctx, JSValueConst obj,const JSCFunctionListEntry *tab,int len);
extern JSModuleDef *(*WIN_JS_NewCModule)(JSContext *ctx, const char *name_str,  JSModuleInitFunc *func);
extern int (*WIN_JS_AddModuleExport)(JSContext *ctx, JSModuleDef *m, const char *name_str);
extern int (*WIN_JS_AddModuleExportList)(JSContext *ctx, JSModuleDef *m, const JSCFunctionListEntry *tab, int len);
extern int (*WIN_JS_SetModuleExport)(JSContext *ctx, JSModuleDef *m, const char *export_name, JSValue val);
extern int (*WIN_JS_SetModuleExportList)(JSContext *ctx, JSModuleDef *m, const JSCFunctionListEntry *tab, int len);

extern JSModuleDef *(*WIN_js_init_module_std)(JSContext *ctx, const char *module_name);
extern JSModuleDef *(*WIN_js_init_module_os)(JSContext *ctx, const char *module_name);
extern void (*WIN_js_std_add_helpers)(JSContext *ctx, int argc, char **argv);
extern void (*WIN_js_std_loop)(JSContext *ctx);
extern void (*WIN_js_std_init_handlers)(JSRuntime *rt);
extern void (*WIN_js_std_free_handlers)(JSRuntime *rt);
extern void (*WIN_js_std_dump_error)(JSContext *ctx);
extern uint8_t *(*WIN_js_load_file)(JSContext *ctx, size_t *pbuf_len, const char *filename);
extern int (*WIN_js_module_set_import_meta)(JSContext *ctx, JSValueConst func_val, JS_BOOL use_realpath, JS_BOOL is_main);
extern JSModuleDef *(*WIN_js_module_loader)(JSContext *ctx, const char *module_name, void *opaque);
extern void (*WIN_js_std_eval_binary)(JSContext *ctx, const uint8_t *buf, size_t buf_len, int flags);
extern void (*WIN_js_std_promise_rejection_tracker)(JSContext *ctx, JSValueConst promise, JSValueConst reason, JS_BOOL is_handled, void *opaque);
extern void (*WIN_js_std_set_worker_new_context_func)(JSContext *(*func)(JSRuntime *rt));

void win_jsc_fn_init(const char* const path);
int win_jsc_fn_free();

#endif

